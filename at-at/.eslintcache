[{"/app/src/index.js":"1","/app/src/App.js":"2","/app/src/reportWebVitals.js":"3","/app/src/navbar/Navbar.jsx":"4","/app/src/login/LoginMain.jsx":"5","/app/src/notifications/NotificationsMain.jsx":"6","/app/src/tasker_out/TaskerOutboxMain.jsx":"7","/app/src/home/HomeMain.jsx":"8","/app/src/tasker_creation/TaskerCreationMain.jsx":"9","/app/src/tasker_in/TaskerInboxMain.jsx":"10","/app/src/notifications/NotificationViewer.jsx":"11","/app/src/tasker_creation/FormExample.jsx":"12","/app/src/tasker_creation/TaskerForm.jsx":"13"},{"size":500,"mtime":1609788775370,"results":"14","hashOfConfig":"15"},{"size":1209,"mtime":1609946160655,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1609788775370,"results":"17","hashOfConfig":"15"},{"size":2272,"mtime":1609946160657,"results":"18","hashOfConfig":"15"},{"size":1680,"mtime":1609946160657,"results":"19","hashOfConfig":"15"},{"size":598,"mtime":1609946160658,"results":"20","hashOfConfig":"15"},{"size":282,"mtime":1609790647959,"results":"21","hashOfConfig":"15"},{"size":257,"mtime":1609946160656,"results":"22","hashOfConfig":"15"},{"size":2746,"mtime":1609946126608,"results":"23","hashOfConfig":"15"},{"size":279,"mtime":1609790646728,"results":"24","hashOfConfig":"15"},{"size":344,"mtime":1609946160658,"results":"25","hashOfConfig":"15"},{"size":3094,"mtime":1609879109707,"results":"26","hashOfConfig":"15"},{"size":5320,"mtime":1609885402431,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1gbxmd7",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"/app/src/index.js",[],["61","62"],"/app/src/App.js",[],"/app/src/reportWebVitals.js",[],"/app/src/navbar/Navbar.jsx",[],"/app/src/login/LoginMain.jsx",["63","64"],"import React from \"react\"\n\n\nclass LoginMain extends React.Component {\n    constructor(props) {\n        super(props) \n        this.state = {\n            username: '',\n            passphrase: '',\n        }\n    }\n\n    handleInput = (event) => {\n        this.setState({[event.target.name]: event.target.value})\n    }    \n\n    handleLogin = async () => {\n        const response = await fetch(`http://localhost:3001/authenticate`, {\n            method: 'POST',\n            headers: { 'Content-Type':  'application/json' },\n            body: JSON.stringify({\n                username: this.state.username,\n                passphrase: this.state.passphrase,\n              })\n           });\n        if(response.status == 401){\n            alert(\"Incorrect password or username.\")\n        } else if(response.status == 404){\n            alert(\"Username not found. Please register first.\")\n        } else {\n            const resDetails = await response.json();\n            alert(`Welcome ${resDetails[0].first_name} ${resDetails[0].last_name}!`)\n            this.props.history.push('/create_tasker')\n        }\n    }\n\n    render() {\n        return(\n            <div>\n                <h1>Login</h1>\n                <label>Username: </label>\n                <input type='text' name='username' value={this.state.username} onChange={this.handleInput}></input>\n                <br/>\n                <label>Password: </label>\n                <input type='text' name='passphrase' value={this.state.passphrase} onChange={this.handleInput}></input>\n                <br/>\n                <button onClick={this.handleLogin}>Login</button>\n            </div>\n        )\n    }\n\n}\n\n\nexport default LoginMain;","/app/src/notifications/NotificationsMain.jsx",[],"/app/src/tasker_out/TaskerOutboxMain.jsx",["65"],"import React from \"react\"\n\n\nclass TaskerOutboxMain extends React.Component {\n    constructor(props) {\n        super(props) \n    }\n\n    render() {\n        return(\n            <div> I am inside of the Tasker Outbox Main page</div>\n        )\n    }\n\n}\n\n\nexport default TaskerOutboxMain;","/app/src/home/HomeMain.jsx",["66"],"import React from \"react\"\n\n\nclass HomeMain extends React.Component {\n    constructor(props) {\n        super(props) \n    }\n\n    render() {\n        return(\n            <div> I am inside of the Home Main page</div>\n        )\n    }\n\n}\n\n\nexport default HomeMain;","/app/src/tasker_creation/TaskerCreationMain.jsx",["67"],"import React from \"react\"\n\nimport TaskerForm from \"./TaskerForm\"\nimport FormExample from \"./FormExample\"\n\nclass TaskerCreationMain extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            units: [],  //api querry should only return array of names\n            sendToUnits: [],\n            tasker: {\n                tasker_name : null,\n                suspense_date : null,\n                priority : null,\n                predicted_workload : null,\n                description : null,\n            },\n        }\n    }\n\n    componentDidMount() {\n        // do initial api queries here - get the values for the units to populate the pulldown in the taskerform\n        // this.setState({ units: ['Chief of Space Operations (CSO)', 'USSF Element - NRO', 'Space Operations Command (SpOC)'] })\n    \n        fetch(`http://localhost:3001/unit_names`, {\n            headers : {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            }\n        })\n            .then((res) => res.json())\n                .then((res) => {\n                    // console.log(res);\n                    this.setState({ units : res })\n                })\n    }\n\n    handleInputChange = (e) => {\n        let tempTasker = this.state.tasker;\n        tempTasker[e.target.id] = e.target.value;\n        this.setState({ tasker : tempTasker })\n    }\n\n    handleUnitChange = (values) => {\n        let tempSendToUnits = []\n        for(let i = 0; i < values.length; i++) {\n            if(values[i].unit !== \"\") {\n                tempSendToUnits.push(values[i].unit)\n            }\n        }\n        // console.log(tempSendToUnits)\n        this.setState({ sendToUnits : tempSendToUnits })\n    }\n\n\n    handleSubmitTasker = (e) => {\n        e.preventDefault();     //may want to change this later\n        console.log(this.state.sendToUnits, this.state.tasker);\n\n        //send a post to taskers table with originator unit\n        \n        //send post to tasker version with all info, version 0 \n\n        //send post to units_assigned_taskers table for each unit assigned\n\n    }\n\n    render() {\n        //if doing initial api query async, add a switch that will render a loading icon until fetch is complete?\n        return(\n            <div>\n                <h1>Create a Tasker</h1>\n                <TaskerForm \n                    onInputChange = {this.handleInputChange}\n                    onUnitChange = {this.handleUnitChange}\n                    onSubmitTasker = {this.handleSubmitTasker}                    \n                    units = {this.state.units}\n                />\n                {/* <FormExample/> */}\n            </div>\n        )\n    }\n\n}\n\n\nexport default TaskerCreationMain;","/app/src/tasker_in/TaskerInboxMain.jsx",["68"],"import React from \"react\"\n\n\nclass TaskerInboxMain extends React.Component {\n    constructor(props) {\n        super(props) \n    }\n\n    render() {\n        return(\n            <div> I am inside of the Tasker Inbox Main page</div>\n        )\n    }\n\n}\n\n\nexport default TaskerInboxMain;","/app/src/notifications/NotificationViewer.jsx",[],"/app/src/tasker_creation/FormExample.jsx",[],"/app/src/tasker_creation/TaskerForm.jsx",[],["69","70"],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":26,"column":28,"nodeType":"77","messageId":"78","endLine":26,"endColumn":30},{"ruleId":"75","severity":1,"message":"76","line":28,"column":35,"nodeType":"77","messageId":"78","endLine":28,"endColumn":37},{"ruleId":"79","severity":1,"message":"80","line":5,"column":5,"nodeType":"81","messageId":"82","endLine":7,"endColumn":6},{"ruleId":"79","severity":1,"message":"80","line":5,"column":5,"nodeType":"81","messageId":"82","endLine":7,"endColumn":6},{"ruleId":"83","severity":1,"message":"84","line":4,"column":8,"nodeType":"85","messageId":"86","endLine":4,"endColumn":19},{"ruleId":"79","severity":1,"message":"80","line":5,"column":5,"nodeType":"81","messageId":"82","endLine":7,"endColumn":6},{"ruleId":"71","replacedBy":"87"},{"ruleId":"73","replacedBy":"88"},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-unused-vars","'FormExample' is defined but never used.","Identifier","unusedVar",["89"],["90"],"no-global-assign","no-unsafe-negation"]